name: Selenium Grid CI

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        browser: [ chrome, firefox ]

    env:
      RUN_TARGET: remote
      GRID_URL: http://localhost:4444
      BROWSER: ${{ matrix.browser }}
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build --configuration Release --no-restore

      # ---- Start Selenium Grid using Docker Compose ----
      - name: Start Selenium Grid
        run: docker compose -f docker-compose.yml up -d
        
      - name: Diagnostic:containers, status and logs
        run: |
          echo "=== docker compose ps ==="
          docker compose ps
          echo
          echo "=== hub /status ==="
          curl -sS http://localhost:4444/status | jq '.' || true
          echo
          echo "=== distributor status ==="
          curl -sS http://localhost:4444/se/grid/distributor/status | jq '.' || true
          echo
          echo "=== last 200 lines: hub logs ==="
          docker compose logs --no-color selenium-hub | sed -n '1,200p' || true
          echo
          echo "=== last 200 lines: node-chrome logs ==="
          docker compose logs --no-color node-chrome | sed -n '1,200p' || true
          echo
          echo "=== last 200 lines: node-firefox logs ==="
          docker compose logs --no-color node-firefox | sed -n '1,200p' || true
          echo
          echo "=== inside node-chrome: can it reach hub HTTP? ==="
          docker compose exec -T node-chrome curl -sS http://selenium-hub:4444/status | jq '.' || true

      - name: Wait for hub HTTP and ready
        run: |
          for i in {1..60}; do
            STATUS=$(curl -fsS http://localhost:4444/status || true)
            echo "$STATUS" | jq '.' || echo "$STATUS"
            if echo "$STATUS" | jq -e '.value.ready == true' >/dev/null 2>&1; then
              echo "Hub HTTP reachable and ready"; exit 0
            fi
            echo "Waiting for hub ready... ($i)"; sleep 2
          done
          echo "Hub never reported ready"; exit 1

      - name: Wait for nodes to register
        run: |
          for i in {1..120}; do
            NODES=$(curl -fsS http://localhost:4444/se/grid/distributor/status || true \
              | jq -r '((.distributor.status.nodes // []) | length)')
            echo "Distributor nodes: ${NODES:-0}"
            if [ "${NODES:-0}" -ge 1 ]; then
              echo "Nodes registered: $NODES"; exit 0
            fi
            echo "Waiting for nodes... ($i)"; sleep 2
          done
          echo "Nodes never registered"; exit 1

      # ---- Run tests ----
      - name: Run tests
        run: |
          mkdir -p TestResults Screenshots
          dotnet test --configuration Release --no-build \
            --logger "trx;LogFileName=TestResults_${{ matrix.browser }}.trx"

      - name: Upload test artifacts (TRX + screenshots)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-${{ matrix.browser }}
          path: |
            **/TestResults_*.trx
            **/Screenshots/**
          if-no-files-found: ignore
